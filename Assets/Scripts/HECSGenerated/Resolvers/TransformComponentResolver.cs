using Components;using System;using MessagePack;using HECSFramework.Serialize;using Commands;using HECSFramework.Core;namespace HECSFramework.Core{	[MessagePackObject, Serializable]	public struct TransformComponentResolver : IResolver<TransformComponent>, IResolver<TransformComponentResolver,TransformComponent>, IData	{		[Key(0)]		public Vector3Serialize PositionSave;		[Key(1)]		public Vector3Serialize RotationSave;		public TransformComponentResolver In(ref TransformComponent transformcomponent)		{			transformcomponent.BeforeSync();			this.PositionSave = transformcomponent.PositionSave;			this.RotationSave = transformcomponent.RotationSave;			return this;		}		public void Out(ref IEntity entity)		{			var local = entity.GetTransformComponent();			Out(ref local);		}		public void Out(ref TransformComponent transformcomponent)		{			transformcomponent.PositionSave = this.PositionSave;			transformcomponent.RotationSave = this.RotationSave;			transformcomponent.AfterSync();		}	}}