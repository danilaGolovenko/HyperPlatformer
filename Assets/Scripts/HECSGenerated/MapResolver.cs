using Components;using HECSFramework.Core;using MessagePack.Resolvers;using MessagePack;[Union(0, typeof(CatchesListComponentResolver))][Union(1, typeof(CurrentSpeedComponentResolver))][Union(2, typeof(DamageAmountComponentResolver))][Union(3, typeof(EnemyContainerComponentResolver))][Union(4, typeof(EntityHolderComponentResolver))][Union(5, typeof(HealthBarHeightComponentResolver))][Union(6, typeof(HealthComponentResolver))][Union(7, typeof(JumpStartSpeedComponentResolver))][Union(8, typeof(MeleeAttackComponentResolver))][Union(10, typeof(SpawnPointComponentResolver))][Union(11, typeof(SpeedCoeffComponentResolver))][Union(12, typeof(StopMovingComponentResolver))][Union(13, typeof(TargetSceneComponentResolver))][Union(14, typeof(WaitComponentResolver))][Union(15, typeof(WayComponentResolver))][Union(16, typeof(KilledEnemiesComponentResolver))][Union(17, typeof(CMPlayerCamTagComponentResolver))][Union(18, typeof(DeadTagComponentResolver))][Union(19, typeof(EnemySpawnPointTagComponentResolver))][Union(20, typeof(EnemyTagComponentResolver))][Union(21, typeof(GroundedTagComponentResolver))][Union(22, typeof(HealthBarTagComponentResolver))][Union(23, typeof(MainCameraTagComponentResolver))][Union(24, typeof(MovingPlatformTagComponentResolver))][Union(25, typeof(PlayerSpawnPointTagComponentResolver))][Union(26, typeof(PlayerTagComponentResolver))][Union(27, typeof(SubjectToGravityTagComponentResolver))][Union(28, typeof(WaterTagComponentResolver))][Union(29, typeof(SavePositionComponentResolver))][Union(30, typeof(ViewReferenceComponentResolver))][Union(31, typeof(AbilityOwnerComponentResolver))][Union(32, typeof(AbilityPredicateComponentResolver))][Union(33, typeof(ActorContainerIDResolver))][Union(34, typeof(AppVersionComponentResolver))][Union(35, typeof(PoolableTagComponentResolver))][Union(36, typeof(PredicatesComponentResolver))][Union(37, typeof(AnimatorStateComponentResolver))][Union(38, typeof(CountersHolderComponentResolver))][Union(39, typeof(TestSerializationComponentResolver))][Union(40, typeof(TransformComponentResolver))][Union(41, typeof(AIStrategyComponentResolver))][Union(42, typeof(UntilSuccessStrategyNodeComponentResolver))][Union(43, typeof(AbilitiesHolderComponentResolver))][Union(44, typeof(AfterLifeCompleteTagComponentResolver))][Union(45, typeof(AfterLifeTagComponentResolver))][Union(46, typeof(GameLogicTagComponentResolver))][Union(47, typeof(InputActionsComponentResolver))][Union(48, typeof(InputListenerTagComponentResolver))][Union(49, typeof(ItemTagComponentResolver))][Union(50, typeof(NavMeshAgentComponentResolver))][Union(51, typeof(NetworkEntityTagComponentResolver))][Union(52, typeof(UIGroupTagComponentResolver))][Union(53, typeof(UIViewReferenceComponentResolver))][Union(54, typeof(UnityRectTransformComponentResolver))][Union(55, typeof(UnityTransformComponentResolver))][Union(56, typeof(ViewDestructionDelayedComponentResolver))][Union(57, typeof(ViewReferenceGameObjectComponentResolver))][Union(58, typeof(SoundVolumeComponentResolver))][Union(59, typeof(AbilityTagComponentResolver))][Union(60, typeof(PassiveAbilityTagResolver))][Union(61, typeof(ScenarioAnimationComponentResolver))][Union(62, typeof(StateContextComponentResolver))][Union(63, typeof(StateDataComponentResolver))][Union(64, typeof(StateInfoComponentResolver))][Union(65, typeof(AnimationCheckOutsHolderComponentResolver))][Union(66, typeof(OverrideAnimatorComponentResolver))][Union(67, typeof(SetupAfterViewTagComponentResolver))][Union(68, typeof(AdditionalCanvasTagComponentResolver))][Union(69, typeof(MainCanvasTagComponentResolver))][Union(70, typeof(UITagComponentResolver))]public partial interface IData { }namespace HECSFramework.Core{	public partial class ResolversMap	{		public ResolversMap()		{			GetComponentContainerFunc = GetContainerForComponentFuncProvider;			ProcessResolverContainer = ProcessResolverContainerRealisation;			GetComponentFromContainer = GetComponentFromContainerFuncRealisation;			InitPartialCommandResolvers();			InitCustomResolvers();		}		partial void InitCustomResolvers();		partial void LoadDataFromContainerSwitch(ResolverDataContainer dataContainerForResolving, int worldIndex)		{			switch (dataContainerForResolving.Type)			{				case 0:					ProcessComponents(ref dataContainerForResolving, worldIndex);					break;			}		}		private ResolverDataContainer GetContainerForComponentFuncProvider<T>(T component) where T: IComponent		{			switch (component.GetTypeHashCode)			{				case 1593974329:					var catcheslistcomponentresolver = component as CatchesListComponent;					var CatchesListComponentData = new CatchesListComponentResolver().In(ref catcheslistcomponentresolver);					return PackComponentToContainer(component, CatchesListComponentData);				case 131305000:					var currentspeedcomponentresolver = component as CurrentSpeedComponent;					var CurrentSpeedComponentData = new CurrentSpeedComponentResolver().In(ref currentspeedcomponentresolver);					return PackComponentToContainer(component, CurrentSpeedComponentData);				case 310406913:					var damageamountcomponentresolver = component as DamageAmountComponent;					var DamageAmountComponentData = new DamageAmountComponentResolver().In(ref damageamountcomponentresolver);					return PackComponentToContainer(component, DamageAmountComponentData);				case -1600851739:					var enemycontainercomponentresolver = component as EnemyContainerComponent;					var EnemyContainerComponentData = new EnemyContainerComponentResolver().In(ref enemycontainercomponentresolver);					return PackComponentToContainer(component, EnemyContainerComponentData);				case 228827352:					var entityholdercomponentresolver = component as EntityHolderComponent;					var EntityHolderComponentData = new EntityHolderComponentResolver().In(ref entityholdercomponentresolver);					return PackComponentToContainer(component, EntityHolderComponentData);				case 1866677304:					var healthbarheightcomponentresolver = component as HealthBarHeightComponent;					var HealthBarHeightComponentData = new HealthBarHeightComponentResolver().In(ref healthbarheightcomponentresolver);					return PackComponentToContainer(component, HealthBarHeightComponentData);				case -589508998:					var healthcomponentresolver = component as HealthComponent;					var HealthComponentData = new HealthComponentResolver().In(ref healthcomponentresolver);					return PackComponentToContainer(component, HealthComponentData);				case -1829513680:					var jumpstartspeedcomponentresolver = component as JumpStartSpeedComponent;					var JumpStartSpeedComponentData = new JumpStartSpeedComponentResolver().In(ref jumpstartspeedcomponentresolver);					return PackComponentToContainer(component, JumpStartSpeedComponentData);				case 1485071087:					var meleeattackcomponentresolver = component as MeleeAttackComponent;					var MeleeAttackComponentData = new MeleeAttackComponentResolver().In(ref meleeattackcomponentresolver);					return PackComponentToContainer(component, MeleeAttackComponentData);				case -1056876887:					var spawnpointcomponentresolver = component as SpawnPointComponent;					var SpawnPointComponentData = new SpawnPointComponentResolver().In(ref spawnpointcomponentresolver);					return PackComponentToContainer(component, SpawnPointComponentData);				case -1224390775:					var speedcoeffcomponentresolver = component as SpeedCoeffComponent;					var SpeedCoeffComponentData = new SpeedCoeffComponentResolver().In(ref speedcoeffcomponentresolver);					return PackComponentToContainer(component, SpeedCoeffComponentData);				case -1119266739:					var stopmovingcomponentresolver = component as StopMovingComponent;					var StopMovingComponentData = new StopMovingComponentResolver().In(ref stopmovingcomponentresolver);					return PackComponentToContainer(component, StopMovingComponentData);				case 1444092518:					var targetscenecomponentresolver = component as TargetSceneComponent;					var TargetSceneComponentData = new TargetSceneComponentResolver().In(ref targetscenecomponentresolver);					return PackComponentToContainer(component, TargetSceneComponentData);				case 953117234:					var waitcomponentresolver = component as WaitComponent;					var WaitComponentData = new WaitComponentResolver().In(ref waitcomponentresolver);					return PackComponentToContainer(component, WaitComponentData);				case -209031385:					var waycomponentresolver = component as WayComponent;					var WayComponentData = new WayComponentResolver().In(ref waycomponentresolver);					return PackComponentToContainer(component, WayComponentData);				case 920585640:					var winpointscomponentresolver = component as KilledEnemiesComponent;					var WinPointsComponentData = new KilledEnemiesComponentResolver().In(ref winpointscomponentresolver);					return PackComponentToContainer(component, WinPointsComponentData);				case 2124081175:					var cmplayercamtagcomponentresolver = component as CMPlayerCamTagComponent;					var CMPlayerCamTagComponentData = new CMPlayerCamTagComponentResolver().In(ref cmplayercamtagcomponentresolver);					return PackComponentToContainer(component, CMPlayerCamTagComponentData);				case 999978316:					var deadtagcomponentresolver = component as DeadTagComponent;					var DeadTagComponentData = new DeadTagComponentResolver().In(ref deadtagcomponentresolver);					return PackComponentToContainer(component, DeadTagComponentData);				case -1932250433:					var enemyspawnpointtagcomponentresolver = component as EnemySpawnPointTagComponent;					var EnemySpawnPointTagComponentData = new EnemySpawnPointTagComponentResolver().In(ref enemyspawnpointtagcomponentresolver);					return PackComponentToContainer(component, EnemySpawnPointTagComponentData);				case -1416715012:					var enemytagcomponentresolver = component as EnemyTagComponent;					var EnemyTagComponentData = new EnemyTagComponentResolver().In(ref enemytagcomponentresolver);					return PackComponentToContainer(component, EnemyTagComponentData);				case 1362251933:					var groundedtagcomponentresolver = component as GroundedTagComponent;					var GroundedTagComponentData = new GroundedTagComponentResolver().In(ref groundedtagcomponentresolver);					return PackComponentToContainer(component, GroundedTagComponentData);				case -98003163:					var healthbartagcomponentresolver = component as HealthBarTagComponent;					var HealthBarTagComponentData = new HealthBarTagComponentResolver().In(ref healthbartagcomponentresolver);					return PackComponentToContainer(component, HealthBarTagComponentData);				case -1253761452:					var maincameratagcomponentresolver = component as MainCameraTagComponent;					var MainCameraTagComponentData = new MainCameraTagComponentResolver().In(ref maincameratagcomponentresolver);					return PackComponentToContainer(component, MainCameraTagComponentData);				case 1901080376:					var movingplatformtagcomponentresolver = component as MovingPlatformTagComponent;					var MovingPlatformTagComponentData = new MovingPlatformTagComponentResolver().In(ref movingplatformtagcomponentresolver);					return PackComponentToContainer(component, MovingPlatformTagComponentData);				case -976967698:					var playerspawnpointtagcomponentresolver = component as PlayerSpawnPointTagComponent;					var PlayerSpawnPointTagComponentData = new PlayerSpawnPointTagComponentResolver().In(ref playerspawnpointtagcomponentresolver);					return PackComponentToContainer(component, PlayerSpawnPointTagComponentData);				case 760610747:					var playertagcomponentresolver = component as PlayerTagComponent;					var PlayerTagComponentData = new PlayerTagComponentResolver().In(ref playertagcomponentresolver);					return PackComponentToContainer(component, PlayerTagComponentData);				case -860218305:					var subjecttogravitytagcomponentresolver = component as SubjectToGravityTagComponent;					var SubjectToGravityTagComponentData = new SubjectToGravityTagComponentResolver().In(ref subjecttogravitytagcomponentresolver);					return PackComponentToContainer(component, SubjectToGravityTagComponentData);				case -1405967260:					var watertagcomponentresolver = component as WaterTagComponent;					var WaterTagComponentData = new WaterTagComponentResolver().In(ref watertagcomponentresolver);					return PackComponentToContainer(component, WaterTagComponentData);				case 369067176:					var savepositioncomponentresolver = component as SavePositionComponent;					var SavePositionComponentData = new SavePositionComponentResolver().In(ref savepositioncomponentresolver);					return PackComponentToContainer(component, SavePositionComponentData);				case -1029564515:					var viewreferencecomponentresolver = component as ViewReferenceComponent;					var ViewReferenceComponentData = new ViewReferenceComponentResolver().In(ref viewreferencecomponentresolver);					return PackComponentToContainer(component, ViewReferenceComponentData);				case 313621202:					var abilityownercomponentresolver = component as AbilityOwnerComponent;					var AbilityOwnerComponentData = new AbilityOwnerComponentResolver().In(ref abilityownercomponentresolver);					return PackComponentToContainer(component, AbilityOwnerComponentData);				case 1878456296:					var abilitypredicatecomponentresolver = component as AbilityPredicateComponent;					var AbilityPredicateComponentData = new AbilityPredicateComponentResolver().In(ref abilitypredicatecomponentresolver);					return PackComponentToContainer(component, AbilityPredicateComponentData);				case -142928435:					var actorcontaineridresolver = component as ActorContainerID;					var ActorContainerIDData = new ActorContainerIDResolver().In(ref actorcontaineridresolver);					return PackComponentToContainer(component, ActorContainerIDData);				case -988064901:					var appversioncomponentresolver = component as AppVersionComponent;					var AppVersionComponentData = new AppVersionComponentResolver().In(ref appversioncomponentresolver);					return PackComponentToContainer(component, AppVersionComponentData);				case 1354058828:					var poolabletagcomponentresolver = component as PoolableTagComponent;					var PoolableTagComponentData = new PoolableTagComponentResolver().In(ref poolabletagcomponentresolver);					return PackComponentToContainer(component, PoolableTagComponentData);				case -1064941338:					var predicatescomponentresolver = component as PredicatesComponent;					var PredicatesComponentData = new PredicatesComponentResolver().In(ref predicatescomponentresolver);					return PackComponentToContainer(component, PredicatesComponentData);				case -950198728:					var animatorstatecomponentresolver = component as AnimatorStateComponent;					var AnimatorStateComponentData = new AnimatorStateComponentResolver().In(ref animatorstatecomponentresolver);					return PackComponentToContainer(component, AnimatorStateComponentData);				case -1627736277:					var countersholdercomponentresolver = component as CountersHolderComponent;					var CountersHolderComponentData = new CountersHolderComponentResolver().In(ref countersholdercomponentresolver);					return PackComponentToContainer(component, CountersHolderComponentData);				case -1713719609:					var testserializationcomponentresolver = component as TestSerializationComponent;					var TestSerializationComponentData = new TestSerializationComponentResolver().In(ref testserializationcomponentresolver);					return PackComponentToContainer(component, TestSerializationComponentData);				case 888932549:					var transformcomponentresolver = component as TransformComponent;					var TransformComponentData = new TransformComponentResolver().In(ref transformcomponentresolver);					return PackComponentToContainer(component, TransformComponentData);				case -952149029:					var aistrategycomponentresolver = component as AIStrategyComponent;					var AIStrategyComponentData = new AIStrategyComponentResolver().In(ref aistrategycomponentresolver);					return PackComponentToContainer(component, AIStrategyComponentData);				case 1143262242:					var untilsuccessstrategynodecomponentresolver = component as UntilSuccessStrategyNodeComponent;					var UntilSuccessStrategyNodeComponentData = new UntilSuccessStrategyNodeComponentResolver().In(ref untilsuccessstrategynodecomponentresolver);					return PackComponentToContainer(component, UntilSuccessStrategyNodeComponentData);				case 2041590961:					var abilitiesholdercomponentresolver = component as AbilitiesHolderComponent;					var AbilitiesHolderComponentData = new AbilitiesHolderComponentResolver().In(ref abilitiesholdercomponentresolver);					return PackComponentToContainer(component, AbilitiesHolderComponentData);				case 53484848:					var afterlifecompletetagcomponentresolver = component as AfterLifeCompleteTagComponent;					var AfterLifeCompleteTagComponentData = new AfterLifeCompleteTagComponentResolver().In(ref afterlifecompletetagcomponentresolver);					return PackComponentToContainer(component, AfterLifeCompleteTagComponentData);				case -88497250:					var afterlifetagcomponentresolver = component as AfterLifeTagComponent;					var AfterLifeTagComponentData = new AfterLifeTagComponentResolver().In(ref afterlifetagcomponentresolver);					return PackComponentToContainer(component, AfterLifeTagComponentData);				case -100950956:					var gamelogictagcomponentresolver = component as GameLogicTagComponent;					var GameLogicTagComponentData = new GameLogicTagComponentResolver().In(ref gamelogictagcomponentresolver);					return PackComponentToContainer(component, GameLogicTagComponentData);				case 369850288:					var inputactionscomponentresolver = component as InputActionsComponent;					var InputActionsComponentData = new InputActionsComponentResolver().In(ref inputactionscomponentresolver);					return PackComponentToContainer(component, InputActionsComponentData);				case 1776997060:					var inputlistenertagcomponentresolver = component as InputListenerTagComponent;					var InputListenerTagComponentData = new InputListenerTagComponentResolver().In(ref inputlistenertagcomponentresolver);					return PackComponentToContainer(component, InputListenerTagComponentData);				case 1004631539:					var itemtagcomponentresolver = component as ItemTagComponent;					var ItemTagComponentData = new ItemTagComponentResolver().In(ref itemtagcomponentresolver);					return PackComponentToContainer(component, ItemTagComponentData);				case 117603503:					var navmeshagentcomponentresolver = component as NavMeshAgentComponent;					var NavMeshAgentComponentData = new NavMeshAgentComponentResolver().In(ref navmeshagentcomponentresolver);					return PackComponentToContainer(component, NavMeshAgentComponentData);				case 1908646573:					var networkentitytagcomponentresolver = component as NetworkEntityTagComponent;					var NetworkEntityTagComponentData = new NetworkEntityTagComponentResolver().In(ref networkentitytagcomponentresolver);					return PackComponentToContainer(component, NetworkEntityTagComponentData);				case -1162002111:					var uigrouptagcomponentresolver = component as UIGroupTagComponent;					var UIGroupTagComponentData = new UIGroupTagComponentResolver().In(ref uigrouptagcomponentresolver);					return PackComponentToContainer(component, UIGroupTagComponentData);				case 1908410989:					var uiviewreferencecomponentresolver = component as UIViewReferenceComponent;					var UIViewReferenceComponentData = new UIViewReferenceComponentResolver().In(ref uiviewreferencecomponentresolver);					return PackComponentToContainer(component, UIViewReferenceComponentData);				case -1206519595:					var unityrecttransformcomponentresolver = component as UnityRectTransformComponent;					var UnityRectTransformComponentData = new UnityRectTransformComponentResolver().In(ref unityrecttransformcomponentresolver);					return PackComponentToContainer(component, UnityRectTransformComponentData);				case -1425063609:					var unitytransformcomponentresolver = component as UnityTransformComponent;					var UnityTransformComponentData = new UnityTransformComponentResolver().In(ref unitytransformcomponentresolver);					return PackComponentToContainer(component, UnityTransformComponentData);				case 42315994:					var viewdestructiondelayedcomponentresolver = component as ViewDestructionDelayedComponent;					var ViewDestructionDelayedComponentData = new ViewDestructionDelayedComponentResolver().In(ref viewdestructiondelayedcomponentresolver);					return PackComponentToContainer(component, ViewDestructionDelayedComponentData);				case 1656499746:					var viewreferencegameobjectcomponentresolver = component as ViewReferenceGameObjectComponent;					var ViewReferenceGameObjectComponentData = new ViewReferenceGameObjectComponentResolver().In(ref viewreferencegameobjectcomponentresolver);					return PackComponentToContainer(component, ViewReferenceGameObjectComponentData);				case 1587816967:					var soundvolumecomponentresolver = component as SoundVolumeComponent;					var SoundVolumeComponentData = new SoundVolumeComponentResolver().In(ref soundvolumecomponentresolver);					return PackComponentToContainer(component, SoundVolumeComponentData);				case -1150856501:					var abilitytagcomponentresolver = component as AbilityTagComponent;					var AbilityTagComponentData = new AbilityTagComponentResolver().In(ref abilitytagcomponentresolver);					return PackComponentToContainer(component, AbilityTagComponentData);				case -1856633313:					var passiveabilitytagresolver = component as PassiveAbilityTag;					var PassiveAbilityTagData = new PassiveAbilityTagResolver().In(ref passiveabilitytagresolver);					return PackComponentToContainer(component, PassiveAbilityTagData);				case -1965185654:					var scenarioanimationcomponentresolver = component as ScenarioAnimationComponent;					var ScenarioAnimationComponentData = new ScenarioAnimationComponentResolver().In(ref scenarioanimationcomponentresolver);					return PackComponentToContainer(component, ScenarioAnimationComponentData);				case 387690372:					var statecontextcomponentresolver = component as StateContextComponent;					var StateContextComponentData = new StateContextComponentResolver().In(ref statecontextcomponentresolver);					return PackComponentToContainer(component, StateContextComponentData);				case 760681168:					var statedatacomponentresolver = component as StateDataComponent;					var StateDataComponentData = new StateDataComponentResolver().In(ref statedatacomponentresolver);					return PackComponentToContainer(component, StateDataComponentData);				case 819793506:					var stateinfocomponentresolver = component as StateInfoComponent;					var StateInfoComponentData = new StateInfoComponentResolver().In(ref stateinfocomponentresolver);					return PackComponentToContainer(component, StateInfoComponentData);				case 1046176786:					var animationcheckoutsholdercomponentresolver = component as AnimationCheckOutsHolderComponent;					var AnimationCheckOutsHolderComponentData = new AnimationCheckOutsHolderComponentResolver().In(ref animationcheckoutsholdercomponentresolver);					return PackComponentToContainer(component, AnimationCheckOutsHolderComponentData);				case -2117687604:					var overrideanimatorcomponentresolver = component as OverrideAnimatorComponent;					var OverrideAnimatorComponentData = new OverrideAnimatorComponentResolver().In(ref overrideanimatorcomponentresolver);					return PackComponentToContainer(component, OverrideAnimatorComponentData);				case 1782176358:					var setupafterviewtagcomponentresolver = component as SetupAfterViewTagComponent;					var SetupAfterViewTagComponentData = new SetupAfterViewTagComponentResolver().In(ref setupafterviewtagcomponentresolver);					return PackComponentToContainer(component, SetupAfterViewTagComponentData);				case -1191206187:					var additionalcanvastagcomponentresolver = component as AdditionalCanvasTagComponent;					var AdditionalCanvasTagComponentData = new AdditionalCanvasTagComponentResolver().In(ref additionalcanvastagcomponentresolver);					return PackComponentToContainer(component, AdditionalCanvasTagComponentData);				case -1144719428:					var maincanvastagcomponentresolver = component as MainCanvasTagComponent;					var MainCanvasTagComponentData = new MainCanvasTagComponentResolver().In(ref maincanvastagcomponentresolver);					return PackComponentToContainer(component, MainCanvasTagComponentData);				case -2124047058:					var uitagcomponentresolver = component as UITagComponent;					var UITagComponentData = new UITagComponentResolver().In(ref uitagcomponentresolver);					return PackComponentToContainer(component, UITagComponentData);			}			return default;		}		private void ProcessComponents(ref ResolverDataContainer dataContainerForResolving, int worldIndex)		{			switch (dataContainerForResolving.TypeHashCode)			{				case 1593974329:					var CatchesListComponentresolver = MessagePackSerializer.Deserialize<CatchesListComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCatchesListComponent))					{						var CatchesListComponentcomponent = (CatchesListComponent)entityOfCatchesListComponent.GetCatchesListComponent();						CatchesListComponentresolver.Out(ref CatchesListComponentcomponent);					}					break;				case 131305000:					var CurrentSpeedComponentresolver = MessagePackSerializer.Deserialize<CurrentSpeedComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCurrentSpeedComponent))					{						var CurrentSpeedComponentcomponent = (CurrentSpeedComponent)entityOfCurrentSpeedComponent.GetCurrentSpeedComponent();						CurrentSpeedComponentresolver.Out(ref CurrentSpeedComponentcomponent);					}					break;				case 310406913:					var DamageAmountComponentresolver = MessagePackSerializer.Deserialize<DamageAmountComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfDamageAmountComponent))					{						var DamageAmountComponentcomponent = (DamageAmountComponent)entityOfDamageAmountComponent.GetDamageAmountComponent();						DamageAmountComponentresolver.Out(ref DamageAmountComponentcomponent);					}					break;				case -1600851739:					var EnemyContainerComponentresolver = MessagePackSerializer.Deserialize<EnemyContainerComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfEnemyContainerComponent))					{						var EnemyContainerComponentcomponent = (EnemyContainerComponent)entityOfEnemyContainerComponent.GetEnemyContainerComponent();						EnemyContainerComponentresolver.Out(ref EnemyContainerComponentcomponent);					}					break;				case 228827352:					var EntityHolderComponentresolver = MessagePackSerializer.Deserialize<EntityHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfEntityHolderComponent))					{						var EntityHolderComponentcomponent = (EntityHolderComponent)entityOfEntityHolderComponent.GetEntityHolderComponent();						EntityHolderComponentresolver.Out(ref EntityHolderComponentcomponent);					}					break;				case 1866677304:					var HealthBarHeightComponentresolver = MessagePackSerializer.Deserialize<HealthBarHeightComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfHealthBarHeightComponent))					{						var HealthBarHeightComponentcomponent = (HealthBarHeightComponent)entityOfHealthBarHeightComponent.GetHealthBarHeightComponent();						HealthBarHeightComponentresolver.Out(ref HealthBarHeightComponentcomponent);					}					break;				case -589508998:					var HealthComponentresolver = MessagePackSerializer.Deserialize<HealthComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfHealthComponent))					{						var HealthComponentcomponent = (HealthComponent)entityOfHealthComponent.GetHealthComponent();						HealthComponentresolver.Out(ref HealthComponentcomponent);					}					break;				case -1829513680:					var JumpStartSpeedComponentresolver = MessagePackSerializer.Deserialize<JumpStartSpeedComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfJumpStartSpeedComponent))					{						var JumpStartSpeedComponentcomponent = (JumpStartSpeedComponent)entityOfJumpStartSpeedComponent.GetJumpStartSpeedComponent();						JumpStartSpeedComponentresolver.Out(ref JumpStartSpeedComponentcomponent);					}					break;				case 1485071087:					var MeleeAttackComponentresolver = MessagePackSerializer.Deserialize<MeleeAttackComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMeleeAttackComponent))					{						var MeleeAttackComponentcomponent = (MeleeAttackComponent)entityOfMeleeAttackComponent.GetMeleeAttackComponent();						MeleeAttackComponentresolver.Out(ref MeleeAttackComponentcomponent);					}					break;				case -1056876887:					var SpawnPointComponentresolver = MessagePackSerializer.Deserialize<SpawnPointComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSpawnPointComponent))					{						var SpawnPointComponentcomponent = (SpawnPointComponent)entityOfSpawnPointComponent.GetSpawnPointComponent();						SpawnPointComponentresolver.Out(ref SpawnPointComponentcomponent);					}					break;				case -1224390775:					var SpeedCoeffComponentresolver = MessagePackSerializer.Deserialize<SpeedCoeffComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSpeedCoeffComponent))					{						var SpeedCoeffComponentcomponent = (SpeedCoeffComponent)entityOfSpeedCoeffComponent.GetSpeedCoeffComponent();						SpeedCoeffComponentresolver.Out(ref SpeedCoeffComponentcomponent);					}					break;				case -1119266739:					var StopMovingComponentresolver = MessagePackSerializer.Deserialize<StopMovingComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStopMovingComponent))					{						var StopMovingComponentcomponent = (StopMovingComponent)entityOfStopMovingComponent.GetStopMovingComponent();						StopMovingComponentresolver.Out(ref StopMovingComponentcomponent);					}					break;				case 1444092518:					var TargetSceneComponentresolver = MessagePackSerializer.Deserialize<TargetSceneComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTargetSceneComponent))					{						var TargetSceneComponentcomponent = (TargetSceneComponent)entityOfTargetSceneComponent.GetTargetSceneComponent();						TargetSceneComponentresolver.Out(ref TargetSceneComponentcomponent);					}					break;				case 953117234:					var WaitComponentresolver = MessagePackSerializer.Deserialize<WaitComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfWaitComponent))					{						var WaitComponentcomponent = (WaitComponent)entityOfWaitComponent.GetWaitComponent();						WaitComponentresolver.Out(ref WaitComponentcomponent);					}					break;				case -209031385:					var WayComponentresolver = MessagePackSerializer.Deserialize<WayComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfWayComponent))					{						var WayComponentcomponent = (WayComponent)entityOfWayComponent.GetWayComponent();						WayComponentresolver.Out(ref WayComponentcomponent);					}					break;				case 920585640:					var WinPointsComponentresolver = MessagePackSerializer.Deserialize<KilledEnemiesComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfKilledEnemiesComponent))					{						var WinPointsComponentcomponent = (KilledEnemiesComponent)entityOfKilledEnemiesComponent.GetKilledEnemiesComponent();						WinPointsComponentresolver.Out(ref WinPointsComponentcomponent);					}					break;				case 2124081175:					var CMPlayerCamTagComponentresolver = MessagePackSerializer.Deserialize<CMPlayerCamTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCMPlayerCamTagComponent))					{						var CMPlayerCamTagComponentcomponent = (CMPlayerCamTagComponent)entityOfCMPlayerCamTagComponent.GetCMPlayerCamTagComponent();						CMPlayerCamTagComponentresolver.Out(ref CMPlayerCamTagComponentcomponent);					}					break;				case 999978316:					var DeadTagComponentresolver = MessagePackSerializer.Deserialize<DeadTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfDeadTagComponent))					{						var DeadTagComponentcomponent = (DeadTagComponent)entityOfDeadTagComponent.GetDeadTagComponent();						DeadTagComponentresolver.Out(ref DeadTagComponentcomponent);					}					break;				case -1932250433:					var EnemySpawnPointTagComponentresolver = MessagePackSerializer.Deserialize<EnemySpawnPointTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfEnemySpawnPointTagComponent))					{						var EnemySpawnPointTagComponentcomponent = (EnemySpawnPointTagComponent)entityOfEnemySpawnPointTagComponent.GetEnemySpawnPointTagComponent();						EnemySpawnPointTagComponentresolver.Out(ref EnemySpawnPointTagComponentcomponent);					}					break;				case -1416715012:					var EnemyTagComponentresolver = MessagePackSerializer.Deserialize<EnemyTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfEnemyTagComponent))					{						var EnemyTagComponentcomponent = (EnemyTagComponent)entityOfEnemyTagComponent.GetEnemyTagComponent();						EnemyTagComponentresolver.Out(ref EnemyTagComponentcomponent);					}					break;				case 1362251933:					var GroundedTagComponentresolver = MessagePackSerializer.Deserialize<GroundedTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfGroundedTagComponent))					{						var GroundedTagComponentcomponent = (GroundedTagComponent)entityOfGroundedTagComponent.GetGroundedTagComponent();						GroundedTagComponentresolver.Out(ref GroundedTagComponentcomponent);					}					break;				case -98003163:					var HealthBarTagComponentresolver = MessagePackSerializer.Deserialize<HealthBarTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfHealthBarTagComponent))					{						var HealthBarTagComponentcomponent = (HealthBarTagComponent)entityOfHealthBarTagComponent.GetHealthBarTagComponent();						HealthBarTagComponentresolver.Out(ref HealthBarTagComponentcomponent);					}					break;				case -1253761452:					var MainCameraTagComponentresolver = MessagePackSerializer.Deserialize<MainCameraTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMainCameraTagComponent))					{						var MainCameraTagComponentcomponent = (MainCameraTagComponent)entityOfMainCameraTagComponent.GetMainCameraTagComponent();						MainCameraTagComponentresolver.Out(ref MainCameraTagComponentcomponent);					}					break;				case 1901080376:					var MovingPlatformTagComponentresolver = MessagePackSerializer.Deserialize<MovingPlatformTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMovingPlatformTagComponent))					{						var MovingPlatformTagComponentcomponent = (MovingPlatformTagComponent)entityOfMovingPlatformTagComponent.GetMovingPlatformTagComponent();						MovingPlatformTagComponentresolver.Out(ref MovingPlatformTagComponentcomponent);					}					break;				case -976967698:					var PlayerSpawnPointTagComponentresolver = MessagePackSerializer.Deserialize<PlayerSpawnPointTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPlayerSpawnPointTagComponent))					{						var PlayerSpawnPointTagComponentcomponent = (PlayerSpawnPointTagComponent)entityOfPlayerSpawnPointTagComponent.GetPlayerSpawnPointTagComponent();						PlayerSpawnPointTagComponentresolver.Out(ref PlayerSpawnPointTagComponentcomponent);					}					break;				case 760610747:					var PlayerTagComponentresolver = MessagePackSerializer.Deserialize<PlayerTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPlayerTagComponent))					{						var PlayerTagComponentcomponent = (PlayerTagComponent)entityOfPlayerTagComponent.GetPlayerTagComponent();						PlayerTagComponentresolver.Out(ref PlayerTagComponentcomponent);					}					break;				case -860218305:					var SubjectToGravityTagComponentresolver = MessagePackSerializer.Deserialize<SubjectToGravityTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSubjectToGravityTagComponent))					{						var SubjectToGravityTagComponentcomponent = (SubjectToGravityTagComponent)entityOfSubjectToGravityTagComponent.GetSubjectToGravityTagComponent();						SubjectToGravityTagComponentresolver.Out(ref SubjectToGravityTagComponentcomponent);					}					break;				case -1405967260:					var WaterTagComponentresolver = MessagePackSerializer.Deserialize<WaterTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfWaterTagComponent))					{						var WaterTagComponentcomponent = (WaterTagComponent)entityOfWaterTagComponent.GetWaterTagComponent();						WaterTagComponentresolver.Out(ref WaterTagComponentcomponent);					}					break;				case 369067176:					var SavePositionComponentresolver = MessagePackSerializer.Deserialize<SavePositionComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSavePositionComponent))					{						var SavePositionComponentcomponent = (SavePositionComponent)entityOfSavePositionComponent.GetSavePositionComponent();						SavePositionComponentresolver.Out(ref SavePositionComponentcomponent);					}					break;				case -1029564515:					var ViewReferenceComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewReferenceComponent))					{						var ViewReferenceComponentcomponent = (ViewReferenceComponent)entityOfViewReferenceComponent.GetViewReferenceComponent();						ViewReferenceComponentresolver.Out(ref ViewReferenceComponentcomponent);					}					break;				case 313621202:					var AbilityOwnerComponentresolver = MessagePackSerializer.Deserialize<AbilityOwnerComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilityOwnerComponent))					{						var AbilityOwnerComponentcomponent = (AbilityOwnerComponent)entityOfAbilityOwnerComponent.GetAbilityOwnerComponent();						AbilityOwnerComponentresolver.Out(ref AbilityOwnerComponentcomponent);					}					break;				case 1878456296:					var AbilityPredicateComponentresolver = MessagePackSerializer.Deserialize<AbilityPredicateComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilityPredicateComponent))					{						var AbilityPredicateComponentcomponent = (AbilityPredicateComponent)entityOfAbilityPredicateComponent.GetAbilityPredicateComponent();						AbilityPredicateComponentresolver.Out(ref AbilityPredicateComponentcomponent);					}					break;				case -142928435:					var ActorContainerIDresolver = MessagePackSerializer.Deserialize<ActorContainerIDResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfActorContainerID))					{						var ActorContainerIDcomponent = (ActorContainerID)entityOfActorContainerID.GetActorContainerID();						ActorContainerIDresolver.Out(ref ActorContainerIDcomponent);					}					break;				case -988064901:					var AppVersionComponentresolver = MessagePackSerializer.Deserialize<AppVersionComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAppVersionComponent))					{						var AppVersionComponentcomponent = (AppVersionComponent)entityOfAppVersionComponent.GetAppVersionComponent();						AppVersionComponentresolver.Out(ref AppVersionComponentcomponent);					}					break;				case 1354058828:					var PoolableTagComponentresolver = MessagePackSerializer.Deserialize<PoolableTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPoolableTagComponent))					{						var PoolableTagComponentcomponent = (PoolableTagComponent)entityOfPoolableTagComponent.GetPoolableTagComponent();						PoolableTagComponentresolver.Out(ref PoolableTagComponentcomponent);					}					break;				case -1064941338:					var PredicatesComponentresolver = MessagePackSerializer.Deserialize<PredicatesComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPredicatesComponent))					{						var PredicatesComponentcomponent = (PredicatesComponent)entityOfPredicatesComponent.GetPredicatesComponent();						PredicatesComponentresolver.Out(ref PredicatesComponentcomponent);					}					break;				case -950198728:					var AnimatorStateComponentresolver = MessagePackSerializer.Deserialize<AnimatorStateComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAnimatorStateComponent))					{						var AnimatorStateComponentcomponent = (AnimatorStateComponent)entityOfAnimatorStateComponent.GetAnimatorStateComponent();						AnimatorStateComponentresolver.Out(ref AnimatorStateComponentcomponent);					}					break;				case -1627736277:					var CountersHolderComponentresolver = MessagePackSerializer.Deserialize<CountersHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCountersHolderComponent))					{						var CountersHolderComponentcomponent = (CountersHolderComponent)entityOfCountersHolderComponent.GetCountersHolderComponent();						CountersHolderComponentresolver.Out(ref CountersHolderComponentcomponent);					}					break;				case -1713719609:					var TestSerializationComponentresolver = MessagePackSerializer.Deserialize<TestSerializationComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTestSerializationComponent))					{						var TestSerializationComponentcomponent = (TestSerializationComponent)entityOfTestSerializationComponent.GetTestSerializationComponent();						TestSerializationComponentresolver.Out(ref TestSerializationComponentcomponent);					}					break;				case 888932549:					var TransformComponentresolver = MessagePackSerializer.Deserialize<TransformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTransformComponent))					{						var TransformComponentcomponent = (TransformComponent)entityOfTransformComponent.GetTransformComponent();						TransformComponentresolver.Out(ref TransformComponentcomponent);					}					break;				case -952149029:					var AIStrategyComponentresolver = MessagePackSerializer.Deserialize<AIStrategyComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAIStrategyComponent))					{						var AIStrategyComponentcomponent = (AIStrategyComponent)entityOfAIStrategyComponent.GetAIStrategyComponent();						AIStrategyComponentresolver.Out(ref AIStrategyComponentcomponent);					}					break;				case 1143262242:					var UntilSuccessStrategyNodeComponentresolver = MessagePackSerializer.Deserialize<UntilSuccessStrategyNodeComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUntilSuccessStrategyNodeComponent))					{						var UntilSuccessStrategyNodeComponentcomponent = (UntilSuccessStrategyNodeComponent)entityOfUntilSuccessStrategyNodeComponent.GetUntilSuccessStrategyNodeComponent();						UntilSuccessStrategyNodeComponentresolver.Out(ref UntilSuccessStrategyNodeComponentcomponent);					}					break;				case 2041590961:					var AbilitiesHolderComponentresolver = MessagePackSerializer.Deserialize<AbilitiesHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilitiesHolderComponent))					{						var AbilitiesHolderComponentcomponent = (AbilitiesHolderComponent)entityOfAbilitiesHolderComponent.GetAbilitiesHolderComponent();						AbilitiesHolderComponentresolver.Out(ref AbilitiesHolderComponentcomponent);					}					break;				case 53484848:					var AfterLifeCompleteTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeCompleteTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAfterLifeCompleteTagComponent))					{						var AfterLifeCompleteTagComponentcomponent = (AfterLifeCompleteTagComponent)entityOfAfterLifeCompleteTagComponent.GetAfterLifeCompleteTagComponent();						AfterLifeCompleteTagComponentresolver.Out(ref AfterLifeCompleteTagComponentcomponent);					}					break;				case -88497250:					var AfterLifeTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAfterLifeTagComponent))					{						var AfterLifeTagComponentcomponent = (AfterLifeTagComponent)entityOfAfterLifeTagComponent.GetAfterLifeTagComponent();						AfterLifeTagComponentresolver.Out(ref AfterLifeTagComponentcomponent);					}					break;				case -100950956:					var GameLogicTagComponentresolver = MessagePackSerializer.Deserialize<GameLogicTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfGameLogicTagComponent))					{						var GameLogicTagComponentcomponent = (GameLogicTagComponent)entityOfGameLogicTagComponent.GetGameLogicTagComponent();						GameLogicTagComponentresolver.Out(ref GameLogicTagComponentcomponent);					}					break;				case 369850288:					var InputActionsComponentresolver = MessagePackSerializer.Deserialize<InputActionsComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfInputActionsComponent))					{						var InputActionsComponentcomponent = (InputActionsComponent)entityOfInputActionsComponent.GetInputActionsComponent();						InputActionsComponentresolver.Out(ref InputActionsComponentcomponent);					}					break;				case 1776997060:					var InputListenerTagComponentresolver = MessagePackSerializer.Deserialize<InputListenerTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfInputListenerTagComponent))					{						var InputListenerTagComponentcomponent = (InputListenerTagComponent)entityOfInputListenerTagComponent.GetInputListenerTagComponent();						InputListenerTagComponentresolver.Out(ref InputListenerTagComponentcomponent);					}					break;				case 1004631539:					var ItemTagComponentresolver = MessagePackSerializer.Deserialize<ItemTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfItemTagComponent))					{						var ItemTagComponentcomponent = (ItemTagComponent)entityOfItemTagComponent.GetItemTagComponent();						ItemTagComponentresolver.Out(ref ItemTagComponentcomponent);					}					break;				case 117603503:					var NavMeshAgentComponentresolver = MessagePackSerializer.Deserialize<NavMeshAgentComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfNavMeshAgentComponent))					{						var NavMeshAgentComponentcomponent = (NavMeshAgentComponent)entityOfNavMeshAgentComponent.GetNavMeshAgentComponent();						NavMeshAgentComponentresolver.Out(ref NavMeshAgentComponentcomponent);					}					break;				case 1908646573:					var NetworkEntityTagComponentresolver = MessagePackSerializer.Deserialize<NetworkEntityTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfNetworkEntityTagComponent))					{						var NetworkEntityTagComponentcomponent = (NetworkEntityTagComponent)entityOfNetworkEntityTagComponent.GetNetworkEntityTagComponent();						NetworkEntityTagComponentresolver.Out(ref NetworkEntityTagComponentcomponent);					}					break;				case -1162002111:					var UIGroupTagComponentresolver = MessagePackSerializer.Deserialize<UIGroupTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUIGroupTagComponent))					{						var UIGroupTagComponentcomponent = (UIGroupTagComponent)entityOfUIGroupTagComponent.GetUIGroupTagComponent();						UIGroupTagComponentresolver.Out(ref UIGroupTagComponentcomponent);					}					break;				case 1908410989:					var UIViewReferenceComponentresolver = MessagePackSerializer.Deserialize<UIViewReferenceComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUIViewReferenceComponent))					{						var UIViewReferenceComponentcomponent = (UIViewReferenceComponent)entityOfUIViewReferenceComponent.GetUIViewReferenceComponent();						UIViewReferenceComponentresolver.Out(ref UIViewReferenceComponentcomponent);					}					break;				case -1206519595:					var UnityRectTransformComponentresolver = MessagePackSerializer.Deserialize<UnityRectTransformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUnityRectTransformComponent))					{						var UnityRectTransformComponentcomponent = (UnityRectTransformComponent)entityOfUnityRectTransformComponent.GetUnityRectTransformComponent();						UnityRectTransformComponentresolver.Out(ref UnityRectTransformComponentcomponent);					}					break;				case -1425063609:					var UnityTransformComponentresolver = MessagePackSerializer.Deserialize<UnityTransformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUnityTransformComponent))					{						var UnityTransformComponentcomponent = (UnityTransformComponent)entityOfUnityTransformComponent.GetUnityTransformComponent();						UnityTransformComponentresolver.Out(ref UnityTransformComponentcomponent);					}					break;				case 42315994:					var ViewDestructionDelayedComponentresolver = MessagePackSerializer.Deserialize<ViewDestructionDelayedComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewDestructionDelayedComponent))					{						var ViewDestructionDelayedComponentcomponent = (ViewDestructionDelayedComponent)entityOfViewDestructionDelayedComponent.GetViewDestructionDelayedComponent();						ViewDestructionDelayedComponentresolver.Out(ref ViewDestructionDelayedComponentcomponent);					}					break;				case 1656499746:					var ViewReferenceGameObjectComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceGameObjectComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewReferenceGameObjectComponent))					{						var ViewReferenceGameObjectComponentcomponent = (ViewReferenceGameObjectComponent)entityOfViewReferenceGameObjectComponent.GetViewReferenceGameObjectComponent();						ViewReferenceGameObjectComponentresolver.Out(ref ViewReferenceGameObjectComponentcomponent);					}					break;				case 1587816967:					var SoundVolumeComponentresolver = MessagePackSerializer.Deserialize<SoundVolumeComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSoundVolumeComponent))					{						var SoundVolumeComponentcomponent = (SoundVolumeComponent)entityOfSoundVolumeComponent.GetSoundVolumeComponent();						SoundVolumeComponentresolver.Out(ref SoundVolumeComponentcomponent);					}					break;				case -1150856501:					var AbilityTagComponentresolver = MessagePackSerializer.Deserialize<AbilityTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilityTagComponent))					{						var AbilityTagComponentcomponent = (AbilityTagComponent)entityOfAbilityTagComponent.GetAbilityTagComponent();						AbilityTagComponentresolver.Out(ref AbilityTagComponentcomponent);					}					break;				case -1856633313:					var PassiveAbilityTagresolver = MessagePackSerializer.Deserialize<PassiveAbilityTagResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPassiveAbilityTag))					{						var PassiveAbilityTagcomponent = (PassiveAbilityTag)entityOfPassiveAbilityTag.GetPassiveAbilityTag();						PassiveAbilityTagresolver.Out(ref PassiveAbilityTagcomponent);					}					break;				case -1965185654:					var ScenarioAnimationComponentresolver = MessagePackSerializer.Deserialize<ScenarioAnimationComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfScenarioAnimationComponent))					{						var ScenarioAnimationComponentcomponent = (ScenarioAnimationComponent)entityOfScenarioAnimationComponent.GetScenarioAnimationComponent();						ScenarioAnimationComponentresolver.Out(ref ScenarioAnimationComponentcomponent);					}					break;				case 387690372:					var StateContextComponentresolver = MessagePackSerializer.Deserialize<StateContextComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStateContextComponent))					{						var StateContextComponentcomponent = (StateContextComponent)entityOfStateContextComponent.GetStateContextComponent();						StateContextComponentresolver.Out(ref StateContextComponentcomponent);					}					break;				case 760681168:					var StateDataComponentresolver = MessagePackSerializer.Deserialize<StateDataComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStateDataComponent))					{						var StateDataComponentcomponent = (StateDataComponent)entityOfStateDataComponent.GetStateDataComponent();						StateDataComponentresolver.Out(ref StateDataComponentcomponent);					}					break;				case 819793506:					var StateInfoComponentresolver = MessagePackSerializer.Deserialize<StateInfoComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStateInfoComponent))					{						var StateInfoComponentcomponent = (StateInfoComponent)entityOfStateInfoComponent.GetStateInfoComponent();						StateInfoComponentresolver.Out(ref StateInfoComponentcomponent);					}					break;				case 1046176786:					var AnimationCheckOutsHolderComponentresolver = MessagePackSerializer.Deserialize<AnimationCheckOutsHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAnimationCheckOutsHolderComponent))					{						var AnimationCheckOutsHolderComponentcomponent = (AnimationCheckOutsHolderComponent)entityOfAnimationCheckOutsHolderComponent.GetAnimationCheckOutsHolderComponent();						AnimationCheckOutsHolderComponentresolver.Out(ref AnimationCheckOutsHolderComponentcomponent);					}					break;				case -2117687604:					var OverrideAnimatorComponentresolver = MessagePackSerializer.Deserialize<OverrideAnimatorComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfOverrideAnimatorComponent))					{						var OverrideAnimatorComponentcomponent = (OverrideAnimatorComponent)entityOfOverrideAnimatorComponent.GetOverrideAnimatorComponent();						OverrideAnimatorComponentresolver.Out(ref OverrideAnimatorComponentcomponent);					}					break;				case 1782176358:					var SetupAfterViewTagComponentresolver = MessagePackSerializer.Deserialize<SetupAfterViewTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSetupAfterViewTagComponent))					{						var SetupAfterViewTagComponentcomponent = (SetupAfterViewTagComponent)entityOfSetupAfterViewTagComponent.GetSetupAfterViewTagComponent();						SetupAfterViewTagComponentresolver.Out(ref SetupAfterViewTagComponentcomponent);					}					break;				case -1191206187:					var AdditionalCanvasTagComponentresolver = MessagePackSerializer.Deserialize<AdditionalCanvasTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAdditionalCanvasTagComponent))					{						var AdditionalCanvasTagComponentcomponent = (AdditionalCanvasTagComponent)entityOfAdditionalCanvasTagComponent.GetAdditionalCanvasTagComponent();						AdditionalCanvasTagComponentresolver.Out(ref AdditionalCanvasTagComponentcomponent);					}					break;				case -1144719428:					var MainCanvasTagComponentresolver = MessagePackSerializer.Deserialize<MainCanvasTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMainCanvasTagComponent))					{						var MainCanvasTagComponentcomponent = (MainCanvasTagComponent)entityOfMainCanvasTagComponent.GetMainCanvasTagComponent();						MainCanvasTagComponentresolver.Out(ref MainCanvasTagComponentcomponent);					}					break;				case -2124047058:					var UITagComponentresolver = MessagePackSerializer.Deserialize<UITagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUITagComponent))					{						var UITagComponentcomponent = (UITagComponent)entityOfUITagComponent.GetUITagComponent();						UITagComponentresolver.Out(ref UITagComponentcomponent);					}					break;			}		}		private IComponent GetComponentFromContainerFuncRealisation(ResolverDataContainer resolverDataContainer)		{			switch (resolverDataContainer.TypeHashCode)			{				case 1593974329:					var CatchesListComponentnew = new CatchesListComponent();					var CatchesListComponentdata = MessagePackSerializer.Deserialize<CatchesListComponentResolver>(resolverDataContainer.Data);					CatchesListComponentdata.Out(ref CatchesListComponentnew);					return CatchesListComponentnew;				case 131305000:					var CurrentSpeedComponentnew = new CurrentSpeedComponent();					var CurrentSpeedComponentdata = MessagePackSerializer.Deserialize<CurrentSpeedComponentResolver>(resolverDataContainer.Data);					CurrentSpeedComponentdata.Out(ref CurrentSpeedComponentnew);					return CurrentSpeedComponentnew;				case 310406913:					var DamageAmountComponentnew = new DamageAmountComponent();					var DamageAmountComponentdata = MessagePackSerializer.Deserialize<DamageAmountComponentResolver>(resolverDataContainer.Data);					DamageAmountComponentdata.Out(ref DamageAmountComponentnew);					return DamageAmountComponentnew;				case -1600851739:					var EnemyContainerComponentnew = new EnemyContainerComponent();					var EnemyContainerComponentdata = MessagePackSerializer.Deserialize<EnemyContainerComponentResolver>(resolverDataContainer.Data);					EnemyContainerComponentdata.Out(ref EnemyContainerComponentnew);					return EnemyContainerComponentnew;				case 228827352:					var EntityHolderComponentnew = new EntityHolderComponent();					var EntityHolderComponentdata = MessagePackSerializer.Deserialize<EntityHolderComponentResolver>(resolverDataContainer.Data);					EntityHolderComponentdata.Out(ref EntityHolderComponentnew);					return EntityHolderComponentnew;				case 1866677304:					var HealthBarHeightComponentnew = new HealthBarHeightComponent();					var HealthBarHeightComponentdata = MessagePackSerializer.Deserialize<HealthBarHeightComponentResolver>(resolverDataContainer.Data);					HealthBarHeightComponentdata.Out(ref HealthBarHeightComponentnew);					return HealthBarHeightComponentnew;				case -589508998:					var HealthComponentnew = new HealthComponent();					var HealthComponentdata = MessagePackSerializer.Deserialize<HealthComponentResolver>(resolverDataContainer.Data);					HealthComponentdata.Out(ref HealthComponentnew);					return HealthComponentnew;				case -1829513680:					var JumpStartSpeedComponentnew = new JumpStartSpeedComponent();					var JumpStartSpeedComponentdata = MessagePackSerializer.Deserialize<JumpStartSpeedComponentResolver>(resolverDataContainer.Data);					JumpStartSpeedComponentdata.Out(ref JumpStartSpeedComponentnew);					return JumpStartSpeedComponentnew;				case 1485071087:					var MeleeAttackComponentnew = new MeleeAttackComponent();					var MeleeAttackComponentdata = MessagePackSerializer.Deserialize<MeleeAttackComponentResolver>(resolverDataContainer.Data);					MeleeAttackComponentdata.Out(ref MeleeAttackComponentnew);					return MeleeAttackComponentnew;				case -1056876887:					var SpawnPointComponentnew = new SpawnPointComponent();					var SpawnPointComponentdata = MessagePackSerializer.Deserialize<SpawnPointComponentResolver>(resolverDataContainer.Data);					SpawnPointComponentdata.Out(ref SpawnPointComponentnew);					return SpawnPointComponentnew;				case -1224390775:					var SpeedCoeffComponentnew = new SpeedCoeffComponent();					var SpeedCoeffComponentdata = MessagePackSerializer.Deserialize<SpeedCoeffComponentResolver>(resolverDataContainer.Data);					SpeedCoeffComponentdata.Out(ref SpeedCoeffComponentnew);					return SpeedCoeffComponentnew;				case -1119266739:					var StopMovingComponentnew = new StopMovingComponent();					var StopMovingComponentdata = MessagePackSerializer.Deserialize<StopMovingComponentResolver>(resolverDataContainer.Data);					StopMovingComponentdata.Out(ref StopMovingComponentnew);					return StopMovingComponentnew;				case 1444092518:					var TargetSceneComponentnew = new TargetSceneComponent();					var TargetSceneComponentdata = MessagePackSerializer.Deserialize<TargetSceneComponentResolver>(resolverDataContainer.Data);					TargetSceneComponentdata.Out(ref TargetSceneComponentnew);					return TargetSceneComponentnew;				case 953117234:					var WaitComponentnew = new WaitComponent();					var WaitComponentdata = MessagePackSerializer.Deserialize<WaitComponentResolver>(resolverDataContainer.Data);					WaitComponentdata.Out(ref WaitComponentnew);					return WaitComponentnew;				case -209031385:					var WayComponentnew = new WayComponent();					var WayComponentdata = MessagePackSerializer.Deserialize<WayComponentResolver>(resolverDataContainer.Data);					WayComponentdata.Out(ref WayComponentnew);					return WayComponentnew;				case 920585640:					var WinPointsComponentnew = new KilledEnemiesComponent();					var WinPointsComponentdata = MessagePackSerializer.Deserialize<KilledEnemiesComponentResolver>(resolverDataContainer.Data);					WinPointsComponentdata.Out(ref WinPointsComponentnew);					return WinPointsComponentnew;				case 2124081175:					var CMPlayerCamTagComponentnew = new CMPlayerCamTagComponent();					var CMPlayerCamTagComponentdata = MessagePackSerializer.Deserialize<CMPlayerCamTagComponentResolver>(resolverDataContainer.Data);					CMPlayerCamTagComponentdata.Out(ref CMPlayerCamTagComponentnew);					return CMPlayerCamTagComponentnew;				case 999978316:					var DeadTagComponentnew = new DeadTagComponent();					var DeadTagComponentdata = MessagePackSerializer.Deserialize<DeadTagComponentResolver>(resolverDataContainer.Data);					DeadTagComponentdata.Out(ref DeadTagComponentnew);					return DeadTagComponentnew;				case -1932250433:					var EnemySpawnPointTagComponentnew = new EnemySpawnPointTagComponent();					var EnemySpawnPointTagComponentdata = MessagePackSerializer.Deserialize<EnemySpawnPointTagComponentResolver>(resolverDataContainer.Data);					EnemySpawnPointTagComponentdata.Out(ref EnemySpawnPointTagComponentnew);					return EnemySpawnPointTagComponentnew;				case -1416715012:					var EnemyTagComponentnew = new EnemyTagComponent();					var EnemyTagComponentdata = MessagePackSerializer.Deserialize<EnemyTagComponentResolver>(resolverDataContainer.Data);					EnemyTagComponentdata.Out(ref EnemyTagComponentnew);					return EnemyTagComponentnew;				case 1362251933:					var GroundedTagComponentnew = new GroundedTagComponent();					var GroundedTagComponentdata = MessagePackSerializer.Deserialize<GroundedTagComponentResolver>(resolverDataContainer.Data);					GroundedTagComponentdata.Out(ref GroundedTagComponentnew);					return GroundedTagComponentnew;				case -98003163:					var HealthBarTagComponentnew = new HealthBarTagComponent();					var HealthBarTagComponentdata = MessagePackSerializer.Deserialize<HealthBarTagComponentResolver>(resolverDataContainer.Data);					HealthBarTagComponentdata.Out(ref HealthBarTagComponentnew);					return HealthBarTagComponentnew;				case -1253761452:					var MainCameraTagComponentnew = new MainCameraTagComponent();					var MainCameraTagComponentdata = MessagePackSerializer.Deserialize<MainCameraTagComponentResolver>(resolverDataContainer.Data);					MainCameraTagComponentdata.Out(ref MainCameraTagComponentnew);					return MainCameraTagComponentnew;				case 1901080376:					var MovingPlatformTagComponentnew = new MovingPlatformTagComponent();					var MovingPlatformTagComponentdata = MessagePackSerializer.Deserialize<MovingPlatformTagComponentResolver>(resolverDataContainer.Data);					MovingPlatformTagComponentdata.Out(ref MovingPlatformTagComponentnew);					return MovingPlatformTagComponentnew;				case -976967698:					var PlayerSpawnPointTagComponentnew = new PlayerSpawnPointTagComponent();					var PlayerSpawnPointTagComponentdata = MessagePackSerializer.Deserialize<PlayerSpawnPointTagComponentResolver>(resolverDataContainer.Data);					PlayerSpawnPointTagComponentdata.Out(ref PlayerSpawnPointTagComponentnew);					return PlayerSpawnPointTagComponentnew;				case 760610747:					var PlayerTagComponentnew = new PlayerTagComponent();					var PlayerTagComponentdata = MessagePackSerializer.Deserialize<PlayerTagComponentResolver>(resolverDataContainer.Data);					PlayerTagComponentdata.Out(ref PlayerTagComponentnew);					return PlayerTagComponentnew;				case -860218305:					var SubjectToGravityTagComponentnew = new SubjectToGravityTagComponent();					var SubjectToGravityTagComponentdata = MessagePackSerializer.Deserialize<SubjectToGravityTagComponentResolver>(resolverDataContainer.Data);					SubjectToGravityTagComponentdata.Out(ref SubjectToGravityTagComponentnew);					return SubjectToGravityTagComponentnew;				case -1405967260:					var WaterTagComponentnew = new WaterTagComponent();					var WaterTagComponentdata = MessagePackSerializer.Deserialize<WaterTagComponentResolver>(resolverDataContainer.Data);					WaterTagComponentdata.Out(ref WaterTagComponentnew);					return WaterTagComponentnew;				case 369067176:					var SavePositionComponentnew = new SavePositionComponent();					var SavePositionComponentdata = MessagePackSerializer.Deserialize<SavePositionComponentResolver>(resolverDataContainer.Data);					SavePositionComponentdata.Out(ref SavePositionComponentnew);					return SavePositionComponentnew;				case -1029564515:					var ViewReferenceComponentnew = new ViewReferenceComponent();					var ViewReferenceComponentdata = MessagePackSerializer.Deserialize<ViewReferenceComponentResolver>(resolverDataContainer.Data);					ViewReferenceComponentdata.Out(ref ViewReferenceComponentnew);					return ViewReferenceComponentnew;				case 313621202:					var AbilityOwnerComponentnew = new AbilityOwnerComponent();					var AbilityOwnerComponentdata = MessagePackSerializer.Deserialize<AbilityOwnerComponentResolver>(resolverDataContainer.Data);					AbilityOwnerComponentdata.Out(ref AbilityOwnerComponentnew);					return AbilityOwnerComponentnew;				case 1878456296:					var AbilityPredicateComponentnew = new AbilityPredicateComponent();					var AbilityPredicateComponentdata = MessagePackSerializer.Deserialize<AbilityPredicateComponentResolver>(resolverDataContainer.Data);					AbilityPredicateComponentdata.Out(ref AbilityPredicateComponentnew);					return AbilityPredicateComponentnew;				case -142928435:					var ActorContainerIDnew = new ActorContainerID();					var ActorContainerIDdata = MessagePackSerializer.Deserialize<ActorContainerIDResolver>(resolverDataContainer.Data);					ActorContainerIDdata.Out(ref ActorContainerIDnew);					return ActorContainerIDnew;				case -988064901:					var AppVersionComponentnew = new AppVersionComponent();					var AppVersionComponentdata = MessagePackSerializer.Deserialize<AppVersionComponentResolver>(resolverDataContainer.Data);					AppVersionComponentdata.Out(ref AppVersionComponentnew);					return AppVersionComponentnew;				case 1354058828:					var PoolableTagComponentnew = new PoolableTagComponent();					var PoolableTagComponentdata = MessagePackSerializer.Deserialize<PoolableTagComponentResolver>(resolverDataContainer.Data);					PoolableTagComponentdata.Out(ref PoolableTagComponentnew);					return PoolableTagComponentnew;				case -1064941338:					var PredicatesComponentnew = new PredicatesComponent();					var PredicatesComponentdata = MessagePackSerializer.Deserialize<PredicatesComponentResolver>(resolverDataContainer.Data);					PredicatesComponentdata.Out(ref PredicatesComponentnew);					return PredicatesComponentnew;				case -950198728:					var AnimatorStateComponentnew = new AnimatorStateComponent();					var AnimatorStateComponentdata = MessagePackSerializer.Deserialize<AnimatorStateComponentResolver>(resolverDataContainer.Data);					AnimatorStateComponentdata.Out(ref AnimatorStateComponentnew);					return AnimatorStateComponentnew;				case -1627736277:					var CountersHolderComponentnew = new CountersHolderComponent();					var CountersHolderComponentdata = MessagePackSerializer.Deserialize<CountersHolderComponentResolver>(resolverDataContainer.Data);					CountersHolderComponentdata.Out(ref CountersHolderComponentnew);					return CountersHolderComponentnew;				case -1713719609:					var TestSerializationComponentnew = new TestSerializationComponent();					var TestSerializationComponentdata = MessagePackSerializer.Deserialize<TestSerializationComponentResolver>(resolverDataContainer.Data);					TestSerializationComponentdata.Out(ref TestSerializationComponentnew);					return TestSerializationComponentnew;				case 888932549:					var TransformComponentnew = new TransformComponent();					var TransformComponentdata = MessagePackSerializer.Deserialize<TransformComponentResolver>(resolverDataContainer.Data);					TransformComponentdata.Out(ref TransformComponentnew);					return TransformComponentnew;				case -952149029:					var AIStrategyComponentnew = new AIStrategyComponent();					var AIStrategyComponentdata = MessagePackSerializer.Deserialize<AIStrategyComponentResolver>(resolverDataContainer.Data);					AIStrategyComponentdata.Out(ref AIStrategyComponentnew);					return AIStrategyComponentnew;				case 1143262242:					var UntilSuccessStrategyNodeComponentnew = new UntilSuccessStrategyNodeComponent();					var UntilSuccessStrategyNodeComponentdata = MessagePackSerializer.Deserialize<UntilSuccessStrategyNodeComponentResolver>(resolverDataContainer.Data);					UntilSuccessStrategyNodeComponentdata.Out(ref UntilSuccessStrategyNodeComponentnew);					return UntilSuccessStrategyNodeComponentnew;				case 2041590961:					var AbilitiesHolderComponentnew = new AbilitiesHolderComponent();					var AbilitiesHolderComponentdata = MessagePackSerializer.Deserialize<AbilitiesHolderComponentResolver>(resolverDataContainer.Data);					AbilitiesHolderComponentdata.Out(ref AbilitiesHolderComponentnew);					return AbilitiesHolderComponentnew;				case 53484848:					var AfterLifeCompleteTagComponentnew = new AfterLifeCompleteTagComponent();					var AfterLifeCompleteTagComponentdata = MessagePackSerializer.Deserialize<AfterLifeCompleteTagComponentResolver>(resolverDataContainer.Data);					AfterLifeCompleteTagComponentdata.Out(ref AfterLifeCompleteTagComponentnew);					return AfterLifeCompleteTagComponentnew;				case -88497250:					var AfterLifeTagComponentnew = new AfterLifeTagComponent();					var AfterLifeTagComponentdata = MessagePackSerializer.Deserialize<AfterLifeTagComponentResolver>(resolverDataContainer.Data);					AfterLifeTagComponentdata.Out(ref AfterLifeTagComponentnew);					return AfterLifeTagComponentnew;				case -100950956:					var GameLogicTagComponentnew = new GameLogicTagComponent();					var GameLogicTagComponentdata = MessagePackSerializer.Deserialize<GameLogicTagComponentResolver>(resolverDataContainer.Data);					GameLogicTagComponentdata.Out(ref GameLogicTagComponentnew);					return GameLogicTagComponentnew;				case 369850288:					var InputActionsComponentnew = new InputActionsComponent();					var InputActionsComponentdata = MessagePackSerializer.Deserialize<InputActionsComponentResolver>(resolverDataContainer.Data);					InputActionsComponentdata.Out(ref InputActionsComponentnew);					return InputActionsComponentnew;				case 1776997060:					var InputListenerTagComponentnew = new InputListenerTagComponent();					var InputListenerTagComponentdata = MessagePackSerializer.Deserialize<InputListenerTagComponentResolver>(resolverDataContainer.Data);					InputListenerTagComponentdata.Out(ref InputListenerTagComponentnew);					return InputListenerTagComponentnew;				case 1004631539:					var ItemTagComponentnew = new ItemTagComponent();					var ItemTagComponentdata = MessagePackSerializer.Deserialize<ItemTagComponentResolver>(resolverDataContainer.Data);					ItemTagComponentdata.Out(ref ItemTagComponentnew);					return ItemTagComponentnew;				case 117603503:					var NavMeshAgentComponentnew = new NavMeshAgentComponent();					var NavMeshAgentComponentdata = MessagePackSerializer.Deserialize<NavMeshAgentComponentResolver>(resolverDataContainer.Data);					NavMeshAgentComponentdata.Out(ref NavMeshAgentComponentnew);					return NavMeshAgentComponentnew;				case 1908646573:					var NetworkEntityTagComponentnew = new NetworkEntityTagComponent();					var NetworkEntityTagComponentdata = MessagePackSerializer.Deserialize<NetworkEntityTagComponentResolver>(resolverDataContainer.Data);					NetworkEntityTagComponentdata.Out(ref NetworkEntityTagComponentnew);					return NetworkEntityTagComponentnew;				case -1162002111:					var UIGroupTagComponentnew = new UIGroupTagComponent();					var UIGroupTagComponentdata = MessagePackSerializer.Deserialize<UIGroupTagComponentResolver>(resolverDataContainer.Data);					UIGroupTagComponentdata.Out(ref UIGroupTagComponentnew);					return UIGroupTagComponentnew;				case 1908410989:					var UIViewReferenceComponentnew = new UIViewReferenceComponent();					var UIViewReferenceComponentdata = MessagePackSerializer.Deserialize<UIViewReferenceComponentResolver>(resolverDataContainer.Data);					UIViewReferenceComponentdata.Out(ref UIViewReferenceComponentnew);					return UIViewReferenceComponentnew;				case -1206519595:					var UnityRectTransformComponentnew = new UnityRectTransformComponent();					var UnityRectTransformComponentdata = MessagePackSerializer.Deserialize<UnityRectTransformComponentResolver>(resolverDataContainer.Data);					UnityRectTransformComponentdata.Out(ref UnityRectTransformComponentnew);					return UnityRectTransformComponentnew;				case -1425063609:					var UnityTransformComponentnew = new UnityTransformComponent();					var UnityTransformComponentdata = MessagePackSerializer.Deserialize<UnityTransformComponentResolver>(resolverDataContainer.Data);					UnityTransformComponentdata.Out(ref UnityTransformComponentnew);					return UnityTransformComponentnew;				case 42315994:					var ViewDestructionDelayedComponentnew = new ViewDestructionDelayedComponent();					var ViewDestructionDelayedComponentdata = MessagePackSerializer.Deserialize<ViewDestructionDelayedComponentResolver>(resolverDataContainer.Data);					ViewDestructionDelayedComponentdata.Out(ref ViewDestructionDelayedComponentnew);					return ViewDestructionDelayedComponentnew;				case 1656499746:					var ViewReferenceGameObjectComponentnew = new ViewReferenceGameObjectComponent();					var ViewReferenceGameObjectComponentdata = MessagePackSerializer.Deserialize<ViewReferenceGameObjectComponentResolver>(resolverDataContainer.Data);					ViewReferenceGameObjectComponentdata.Out(ref ViewReferenceGameObjectComponentnew);					return ViewReferenceGameObjectComponentnew;				case 1587816967:					var SoundVolumeComponentnew = new SoundVolumeComponent();					var SoundVolumeComponentdata = MessagePackSerializer.Deserialize<SoundVolumeComponentResolver>(resolverDataContainer.Data);					SoundVolumeComponentdata.Out(ref SoundVolumeComponentnew);					return SoundVolumeComponentnew;				case -1150856501:					var AbilityTagComponentnew = new AbilityTagComponent();					var AbilityTagComponentdata = MessagePackSerializer.Deserialize<AbilityTagComponentResolver>(resolverDataContainer.Data);					AbilityTagComponentdata.Out(ref AbilityTagComponentnew);					return AbilityTagComponentnew;				case -1856633313:					var PassiveAbilityTagnew = new PassiveAbilityTag();					var PassiveAbilityTagdata = MessagePackSerializer.Deserialize<PassiveAbilityTagResolver>(resolverDataContainer.Data);					PassiveAbilityTagdata.Out(ref PassiveAbilityTagnew);					return PassiveAbilityTagnew;				case -1965185654:					var ScenarioAnimationComponentnew = new ScenarioAnimationComponent();					var ScenarioAnimationComponentdata = MessagePackSerializer.Deserialize<ScenarioAnimationComponentResolver>(resolverDataContainer.Data);					ScenarioAnimationComponentdata.Out(ref ScenarioAnimationComponentnew);					return ScenarioAnimationComponentnew;				case 387690372:					var StateContextComponentnew = new StateContextComponent();					var StateContextComponentdata = MessagePackSerializer.Deserialize<StateContextComponentResolver>(resolverDataContainer.Data);					StateContextComponentdata.Out(ref StateContextComponentnew);					return StateContextComponentnew;				case 760681168:					var StateDataComponentnew = new StateDataComponent();					var StateDataComponentdata = MessagePackSerializer.Deserialize<StateDataComponentResolver>(resolverDataContainer.Data);					StateDataComponentdata.Out(ref StateDataComponentnew);					return StateDataComponentnew;				case 819793506:					var StateInfoComponentnew = new StateInfoComponent();					var StateInfoComponentdata = MessagePackSerializer.Deserialize<StateInfoComponentResolver>(resolverDataContainer.Data);					StateInfoComponentdata.Out(ref StateInfoComponentnew);					return StateInfoComponentnew;				case 1046176786:					var AnimationCheckOutsHolderComponentnew = new AnimationCheckOutsHolderComponent();					var AnimationCheckOutsHolderComponentdata = MessagePackSerializer.Deserialize<AnimationCheckOutsHolderComponentResolver>(resolverDataContainer.Data);					AnimationCheckOutsHolderComponentdata.Out(ref AnimationCheckOutsHolderComponentnew);					return AnimationCheckOutsHolderComponentnew;				case -2117687604:					var OverrideAnimatorComponentnew = new OverrideAnimatorComponent();					var OverrideAnimatorComponentdata = MessagePackSerializer.Deserialize<OverrideAnimatorComponentResolver>(resolverDataContainer.Data);					OverrideAnimatorComponentdata.Out(ref OverrideAnimatorComponentnew);					return OverrideAnimatorComponentnew;				case 1782176358:					var SetupAfterViewTagComponentnew = new SetupAfterViewTagComponent();					var SetupAfterViewTagComponentdata = MessagePackSerializer.Deserialize<SetupAfterViewTagComponentResolver>(resolverDataContainer.Data);					SetupAfterViewTagComponentdata.Out(ref SetupAfterViewTagComponentnew);					return SetupAfterViewTagComponentnew;				case -1191206187:					var AdditionalCanvasTagComponentnew = new AdditionalCanvasTagComponent();					var AdditionalCanvasTagComponentdata = MessagePackSerializer.Deserialize<AdditionalCanvasTagComponentResolver>(resolverDataContainer.Data);					AdditionalCanvasTagComponentdata.Out(ref AdditionalCanvasTagComponentnew);					return AdditionalCanvasTagComponentnew;				case -1144719428:					var MainCanvasTagComponentnew = new MainCanvasTagComponent();					var MainCanvasTagComponentdata = MessagePackSerializer.Deserialize<MainCanvasTagComponentResolver>(resolverDataContainer.Data);					MainCanvasTagComponentdata.Out(ref MainCanvasTagComponentnew);					return MainCanvasTagComponentnew;				case -2124047058:					var UITagComponentnew = new UITagComponent();					var UITagComponentdata = MessagePackSerializer.Deserialize<UITagComponentResolver>(resolverDataContainer.Data);					UITagComponentdata.Out(ref UITagComponentnew);					return UITagComponentnew;			}				return default;		}		private void ProcessResolverContainerRealisation(ref ResolverDataContainer dataContainerForResolving, ref IEntity entity)		{			switch (dataContainerForResolving.TypeHashCode)			{				case 1593974329:					var CatchesListComponentresolver = MessagePackSerializer.Deserialize<CatchesListComponentResolver>(dataContainerForResolving.Data);					var CatchesListComponentcomponent = (CatchesListComponent)entity.GetCatchesListComponent();					CatchesListComponentresolver.Out(ref CatchesListComponentcomponent);					break;				case 131305000:					var CurrentSpeedComponentresolver = MessagePackSerializer.Deserialize<CurrentSpeedComponentResolver>(dataContainerForResolving.Data);					var CurrentSpeedComponentcomponent = (CurrentSpeedComponent)entity.GetCurrentSpeedComponent();					CurrentSpeedComponentresolver.Out(ref CurrentSpeedComponentcomponent);					break;				case 310406913:					var DamageAmountComponentresolver = MessagePackSerializer.Deserialize<DamageAmountComponentResolver>(dataContainerForResolving.Data);					var DamageAmountComponentcomponent = (DamageAmountComponent)entity.GetDamageAmountComponent();					DamageAmountComponentresolver.Out(ref DamageAmountComponentcomponent);					break;				case -1600851739:					var EnemyContainerComponentresolver = MessagePackSerializer.Deserialize<EnemyContainerComponentResolver>(dataContainerForResolving.Data);					var EnemyContainerComponentcomponent = (EnemyContainerComponent)entity.GetEnemyContainerComponent();					EnemyContainerComponentresolver.Out(ref EnemyContainerComponentcomponent);					break;				case 228827352:					var EntityHolderComponentresolver = MessagePackSerializer.Deserialize<EntityHolderComponentResolver>(dataContainerForResolving.Data);					var EntityHolderComponentcomponent = (EntityHolderComponent)entity.GetEntityHolderComponent();					EntityHolderComponentresolver.Out(ref EntityHolderComponentcomponent);					break;				case 1866677304:					var HealthBarHeightComponentresolver = MessagePackSerializer.Deserialize<HealthBarHeightComponentResolver>(dataContainerForResolving.Data);					var HealthBarHeightComponentcomponent = (HealthBarHeightComponent)entity.GetHealthBarHeightComponent();					HealthBarHeightComponentresolver.Out(ref HealthBarHeightComponentcomponent);					break;				case -589508998:					var HealthComponentresolver = MessagePackSerializer.Deserialize<HealthComponentResolver>(dataContainerForResolving.Data);					var HealthComponentcomponent = (HealthComponent)entity.GetHealthComponent();					HealthComponentresolver.Out(ref HealthComponentcomponent);					break;				case -1829513680:					var JumpStartSpeedComponentresolver = MessagePackSerializer.Deserialize<JumpStartSpeedComponentResolver>(dataContainerForResolving.Data);					var JumpStartSpeedComponentcomponent = (JumpStartSpeedComponent)entity.GetJumpStartSpeedComponent();					JumpStartSpeedComponentresolver.Out(ref JumpStartSpeedComponentcomponent);					break;				case 1485071087:					var MeleeAttackComponentresolver = MessagePackSerializer.Deserialize<MeleeAttackComponentResolver>(dataContainerForResolving.Data);					var MeleeAttackComponentcomponent = (MeleeAttackComponent)entity.GetMeleeAttackComponent();					MeleeAttackComponentresolver.Out(ref MeleeAttackComponentcomponent);					break;				case -1056876887:					var SpawnPointComponentresolver = MessagePackSerializer.Deserialize<SpawnPointComponentResolver>(dataContainerForResolving.Data);					var SpawnPointComponentcomponent = (SpawnPointComponent)entity.GetSpawnPointComponent();					SpawnPointComponentresolver.Out(ref SpawnPointComponentcomponent);					break;				case -1224390775:					var SpeedCoeffComponentresolver = MessagePackSerializer.Deserialize<SpeedCoeffComponentResolver>(dataContainerForResolving.Data);					var SpeedCoeffComponentcomponent = (SpeedCoeffComponent)entity.GetSpeedCoeffComponent();					SpeedCoeffComponentresolver.Out(ref SpeedCoeffComponentcomponent);					break;				case -1119266739:					var StopMovingComponentresolver = MessagePackSerializer.Deserialize<StopMovingComponentResolver>(dataContainerForResolving.Data);					var StopMovingComponentcomponent = (StopMovingComponent)entity.GetStopMovingComponent();					StopMovingComponentresolver.Out(ref StopMovingComponentcomponent);					break;				case 1444092518:					var TargetSceneComponentresolver = MessagePackSerializer.Deserialize<TargetSceneComponentResolver>(dataContainerForResolving.Data);					var TargetSceneComponentcomponent = (TargetSceneComponent)entity.GetTargetSceneComponent();					TargetSceneComponentresolver.Out(ref TargetSceneComponentcomponent);					break;				case 953117234:					var WaitComponentresolver = MessagePackSerializer.Deserialize<WaitComponentResolver>(dataContainerForResolving.Data);					var WaitComponentcomponent = (WaitComponent)entity.GetWaitComponent();					WaitComponentresolver.Out(ref WaitComponentcomponent);					break;				case -209031385:					var WayComponentresolver = MessagePackSerializer.Deserialize<WayComponentResolver>(dataContainerForResolving.Data);					var WayComponentcomponent = (WayComponent)entity.GetWayComponent();					WayComponentresolver.Out(ref WayComponentcomponent);					break;				case 920585640:					var WinPointsComponentresolver = MessagePackSerializer.Deserialize<KilledEnemiesComponentResolver>(dataContainerForResolving.Data);					var WinPointsComponentcomponent = (KilledEnemiesComponent)entity.GetKilledEnemiesComponent();					WinPointsComponentresolver.Out(ref WinPointsComponentcomponent);					break;				case 2124081175:					var CMPlayerCamTagComponentresolver = MessagePackSerializer.Deserialize<CMPlayerCamTagComponentResolver>(dataContainerForResolving.Data);					var CMPlayerCamTagComponentcomponent = (CMPlayerCamTagComponent)entity.GetCMPlayerCamTagComponent();					CMPlayerCamTagComponentresolver.Out(ref CMPlayerCamTagComponentcomponent);					break;				case 999978316:					var DeadTagComponentresolver = MessagePackSerializer.Deserialize<DeadTagComponentResolver>(dataContainerForResolving.Data);					var DeadTagComponentcomponent = (DeadTagComponent)entity.GetDeadTagComponent();					DeadTagComponentresolver.Out(ref DeadTagComponentcomponent);					break;				case -1932250433:					var EnemySpawnPointTagComponentresolver = MessagePackSerializer.Deserialize<EnemySpawnPointTagComponentResolver>(dataContainerForResolving.Data);					var EnemySpawnPointTagComponentcomponent = (EnemySpawnPointTagComponent)entity.GetEnemySpawnPointTagComponent();					EnemySpawnPointTagComponentresolver.Out(ref EnemySpawnPointTagComponentcomponent);					break;				case -1416715012:					var EnemyTagComponentresolver = MessagePackSerializer.Deserialize<EnemyTagComponentResolver>(dataContainerForResolving.Data);					var EnemyTagComponentcomponent = (EnemyTagComponent)entity.GetEnemyTagComponent();					EnemyTagComponentresolver.Out(ref EnemyTagComponentcomponent);					break;				case 1362251933:					var GroundedTagComponentresolver = MessagePackSerializer.Deserialize<GroundedTagComponentResolver>(dataContainerForResolving.Data);					var GroundedTagComponentcomponent = (GroundedTagComponent)entity.GetGroundedTagComponent();					GroundedTagComponentresolver.Out(ref GroundedTagComponentcomponent);					break;				case -98003163:					var HealthBarTagComponentresolver = MessagePackSerializer.Deserialize<HealthBarTagComponentResolver>(dataContainerForResolving.Data);					var HealthBarTagComponentcomponent = (HealthBarTagComponent)entity.GetHealthBarTagComponent();					HealthBarTagComponentresolver.Out(ref HealthBarTagComponentcomponent);					break;				case -1253761452:					var MainCameraTagComponentresolver = MessagePackSerializer.Deserialize<MainCameraTagComponentResolver>(dataContainerForResolving.Data);					var MainCameraTagComponentcomponent = (MainCameraTagComponent)entity.GetMainCameraTagComponent();					MainCameraTagComponentresolver.Out(ref MainCameraTagComponentcomponent);					break;				case 1901080376:					var MovingPlatformTagComponentresolver = MessagePackSerializer.Deserialize<MovingPlatformTagComponentResolver>(dataContainerForResolving.Data);					var MovingPlatformTagComponentcomponent = (MovingPlatformTagComponent)entity.GetMovingPlatformTagComponent();					MovingPlatformTagComponentresolver.Out(ref MovingPlatformTagComponentcomponent);					break;				case -976967698:					var PlayerSpawnPointTagComponentresolver = MessagePackSerializer.Deserialize<PlayerSpawnPointTagComponentResolver>(dataContainerForResolving.Data);					var PlayerSpawnPointTagComponentcomponent = (PlayerSpawnPointTagComponent)entity.GetPlayerSpawnPointTagComponent();					PlayerSpawnPointTagComponentresolver.Out(ref PlayerSpawnPointTagComponentcomponent);					break;				case 760610747:					var PlayerTagComponentresolver = MessagePackSerializer.Deserialize<PlayerTagComponentResolver>(dataContainerForResolving.Data);					var PlayerTagComponentcomponent = (PlayerTagComponent)entity.GetPlayerTagComponent();					PlayerTagComponentresolver.Out(ref PlayerTagComponentcomponent);					break;				case -860218305:					var SubjectToGravityTagComponentresolver = MessagePackSerializer.Deserialize<SubjectToGravityTagComponentResolver>(dataContainerForResolving.Data);					var SubjectToGravityTagComponentcomponent = (SubjectToGravityTagComponent)entity.GetSubjectToGravityTagComponent();					SubjectToGravityTagComponentresolver.Out(ref SubjectToGravityTagComponentcomponent);					break;				case -1405967260:					var WaterTagComponentresolver = MessagePackSerializer.Deserialize<WaterTagComponentResolver>(dataContainerForResolving.Data);					var WaterTagComponentcomponent = (WaterTagComponent)entity.GetWaterTagComponent();					WaterTagComponentresolver.Out(ref WaterTagComponentcomponent);					break;				case 369067176:					var SavePositionComponentresolver = MessagePackSerializer.Deserialize<SavePositionComponentResolver>(dataContainerForResolving.Data);					var SavePositionComponentcomponent = (SavePositionComponent)entity.GetSavePositionComponent();					SavePositionComponentresolver.Out(ref SavePositionComponentcomponent);					break;				case -1029564515:					var ViewReferenceComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceComponentResolver>(dataContainerForResolving.Data);					var ViewReferenceComponentcomponent = (ViewReferenceComponent)entity.GetViewReferenceComponent();					ViewReferenceComponentresolver.Out(ref ViewReferenceComponentcomponent);					break;				case 313621202:					var AbilityOwnerComponentresolver = MessagePackSerializer.Deserialize<AbilityOwnerComponentResolver>(dataContainerForResolving.Data);					var AbilityOwnerComponentcomponent = (AbilityOwnerComponent)entity.GetAbilityOwnerComponent();					AbilityOwnerComponentresolver.Out(ref AbilityOwnerComponentcomponent);					break;				case 1878456296:					var AbilityPredicateComponentresolver = MessagePackSerializer.Deserialize<AbilityPredicateComponentResolver>(dataContainerForResolving.Data);					var AbilityPredicateComponentcomponent = (AbilityPredicateComponent)entity.GetAbilityPredicateComponent();					AbilityPredicateComponentresolver.Out(ref AbilityPredicateComponentcomponent);					break;				case -142928435:					var ActorContainerIDresolver = MessagePackSerializer.Deserialize<ActorContainerIDResolver>(dataContainerForResolving.Data);					var ActorContainerIDcomponent = (ActorContainerID)entity.GetActorContainerID();					ActorContainerIDresolver.Out(ref ActorContainerIDcomponent);					break;				case -988064901:					var AppVersionComponentresolver = MessagePackSerializer.Deserialize<AppVersionComponentResolver>(dataContainerForResolving.Data);					var AppVersionComponentcomponent = (AppVersionComponent)entity.GetAppVersionComponent();					AppVersionComponentresolver.Out(ref AppVersionComponentcomponent);					break;				case 1354058828:					var PoolableTagComponentresolver = MessagePackSerializer.Deserialize<PoolableTagComponentResolver>(dataContainerForResolving.Data);					var PoolableTagComponentcomponent = (PoolableTagComponent)entity.GetPoolableTagComponent();					PoolableTagComponentresolver.Out(ref PoolableTagComponentcomponent);					break;				case -1064941338:					var PredicatesComponentresolver = MessagePackSerializer.Deserialize<PredicatesComponentResolver>(dataContainerForResolving.Data);					var PredicatesComponentcomponent = (PredicatesComponent)entity.GetPredicatesComponent();					PredicatesComponentresolver.Out(ref PredicatesComponentcomponent);					break;				case -950198728:					var AnimatorStateComponentresolver = MessagePackSerializer.Deserialize<AnimatorStateComponentResolver>(dataContainerForResolving.Data);					var AnimatorStateComponentcomponent = (AnimatorStateComponent)entity.GetAnimatorStateComponent();					AnimatorStateComponentresolver.Out(ref AnimatorStateComponentcomponent);					break;				case -1627736277:					var CountersHolderComponentresolver = MessagePackSerializer.Deserialize<CountersHolderComponentResolver>(dataContainerForResolving.Data);					var CountersHolderComponentcomponent = (CountersHolderComponent)entity.GetCountersHolderComponent();					CountersHolderComponentresolver.Out(ref CountersHolderComponentcomponent);					break;				case -1713719609:					var TestSerializationComponentresolver = MessagePackSerializer.Deserialize<TestSerializationComponentResolver>(dataContainerForResolving.Data);					var TestSerializationComponentcomponent = (TestSerializationComponent)entity.GetTestSerializationComponent();					TestSerializationComponentresolver.Out(ref TestSerializationComponentcomponent);					break;				case 888932549:					var TransformComponentresolver = MessagePackSerializer.Deserialize<TransformComponentResolver>(dataContainerForResolving.Data);					var TransformComponentcomponent = (TransformComponent)entity.GetTransformComponent();					TransformComponentresolver.Out(ref TransformComponentcomponent);					break;				case -952149029:					var AIStrategyComponentresolver = MessagePackSerializer.Deserialize<AIStrategyComponentResolver>(dataContainerForResolving.Data);					var AIStrategyComponentcomponent = (AIStrategyComponent)entity.GetAIStrategyComponent();					AIStrategyComponentresolver.Out(ref AIStrategyComponentcomponent);					break;				case 1143262242:					var UntilSuccessStrategyNodeComponentresolver = MessagePackSerializer.Deserialize<UntilSuccessStrategyNodeComponentResolver>(dataContainerForResolving.Data);					var UntilSuccessStrategyNodeComponentcomponent = (UntilSuccessStrategyNodeComponent)entity.GetUntilSuccessStrategyNodeComponent();					UntilSuccessStrategyNodeComponentresolver.Out(ref UntilSuccessStrategyNodeComponentcomponent);					break;				case 2041590961:					var AbilitiesHolderComponentresolver = MessagePackSerializer.Deserialize<AbilitiesHolderComponentResolver>(dataContainerForResolving.Data);					var AbilitiesHolderComponentcomponent = (AbilitiesHolderComponent)entity.GetAbilitiesHolderComponent();					AbilitiesHolderComponentresolver.Out(ref AbilitiesHolderComponentcomponent);					break;				case 53484848:					var AfterLifeCompleteTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeCompleteTagComponentResolver>(dataContainerForResolving.Data);					var AfterLifeCompleteTagComponentcomponent = (AfterLifeCompleteTagComponent)entity.GetAfterLifeCompleteTagComponent();					AfterLifeCompleteTagComponentresolver.Out(ref AfterLifeCompleteTagComponentcomponent);					break;				case -88497250:					var AfterLifeTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeTagComponentResolver>(dataContainerForResolving.Data);					var AfterLifeTagComponentcomponent = (AfterLifeTagComponent)entity.GetAfterLifeTagComponent();					AfterLifeTagComponentresolver.Out(ref AfterLifeTagComponentcomponent);					break;				case -100950956:					var GameLogicTagComponentresolver = MessagePackSerializer.Deserialize<GameLogicTagComponentResolver>(dataContainerForResolving.Data);					var GameLogicTagComponentcomponent = (GameLogicTagComponent)entity.GetGameLogicTagComponent();					GameLogicTagComponentresolver.Out(ref GameLogicTagComponentcomponent);					break;				case 369850288:					var InputActionsComponentresolver = MessagePackSerializer.Deserialize<InputActionsComponentResolver>(dataContainerForResolving.Data);					var InputActionsComponentcomponent = (InputActionsComponent)entity.GetInputActionsComponent();					InputActionsComponentresolver.Out(ref InputActionsComponentcomponent);					break;				case 1776997060:					var InputListenerTagComponentresolver = MessagePackSerializer.Deserialize<InputListenerTagComponentResolver>(dataContainerForResolving.Data);					var InputListenerTagComponentcomponent = (InputListenerTagComponent)entity.GetInputListenerTagComponent();					InputListenerTagComponentresolver.Out(ref InputListenerTagComponentcomponent);					break;				case 1004631539:					var ItemTagComponentresolver = MessagePackSerializer.Deserialize<ItemTagComponentResolver>(dataContainerForResolving.Data);					var ItemTagComponentcomponent = (ItemTagComponent)entity.GetItemTagComponent();					ItemTagComponentresolver.Out(ref ItemTagComponentcomponent);					break;				case 117603503:					var NavMeshAgentComponentresolver = MessagePackSerializer.Deserialize<NavMeshAgentComponentResolver>(dataContainerForResolving.Data);					var NavMeshAgentComponentcomponent = (NavMeshAgentComponent)entity.GetNavMeshAgentComponent();					NavMeshAgentComponentresolver.Out(ref NavMeshAgentComponentcomponent);					break;				case 1908646573:					var NetworkEntityTagComponentresolver = MessagePackSerializer.Deserialize<NetworkEntityTagComponentResolver>(dataContainerForResolving.Data);					var NetworkEntityTagComponentcomponent = (NetworkEntityTagComponent)entity.GetNetworkEntityTagComponent();					NetworkEntityTagComponentresolver.Out(ref NetworkEntityTagComponentcomponent);					break;				case -1162002111:					var UIGroupTagComponentresolver = MessagePackSerializer.Deserialize<UIGroupTagComponentResolver>(dataContainerForResolving.Data);					var UIGroupTagComponentcomponent = (UIGroupTagComponent)entity.GetUIGroupTagComponent();					UIGroupTagComponentresolver.Out(ref UIGroupTagComponentcomponent);					break;				case 1908410989:					var UIViewReferenceComponentresolver = MessagePackSerializer.Deserialize<UIViewReferenceComponentResolver>(dataContainerForResolving.Data);					var UIViewReferenceComponentcomponent = (UIViewReferenceComponent)entity.GetUIViewReferenceComponent();					UIViewReferenceComponentresolver.Out(ref UIViewReferenceComponentcomponent);					break;				case -1206519595:					var UnityRectTransformComponentresolver = MessagePackSerializer.Deserialize<UnityRectTransformComponentResolver>(dataContainerForResolving.Data);					var UnityRectTransformComponentcomponent = (UnityRectTransformComponent)entity.GetUnityRectTransformComponent();					UnityRectTransformComponentresolver.Out(ref UnityRectTransformComponentcomponent);					break;				case -1425063609:					var UnityTransformComponentresolver = MessagePackSerializer.Deserialize<UnityTransformComponentResolver>(dataContainerForResolving.Data);					var UnityTransformComponentcomponent = (UnityTransformComponent)entity.GetUnityTransformComponent();					UnityTransformComponentresolver.Out(ref UnityTransformComponentcomponent);					break;				case 42315994:					var ViewDestructionDelayedComponentresolver = MessagePackSerializer.Deserialize<ViewDestructionDelayedComponentResolver>(dataContainerForResolving.Data);					var ViewDestructionDelayedComponentcomponent = (ViewDestructionDelayedComponent)entity.GetViewDestructionDelayedComponent();					ViewDestructionDelayedComponentresolver.Out(ref ViewDestructionDelayedComponentcomponent);					break;				case 1656499746:					var ViewReferenceGameObjectComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceGameObjectComponentResolver>(dataContainerForResolving.Data);					var ViewReferenceGameObjectComponentcomponent = (ViewReferenceGameObjectComponent)entity.GetViewReferenceGameObjectComponent();					ViewReferenceGameObjectComponentresolver.Out(ref ViewReferenceGameObjectComponentcomponent);					break;				case 1587816967:					var SoundVolumeComponentresolver = MessagePackSerializer.Deserialize<SoundVolumeComponentResolver>(dataContainerForResolving.Data);					var SoundVolumeComponentcomponent = (SoundVolumeComponent)entity.GetSoundVolumeComponent();					SoundVolumeComponentresolver.Out(ref SoundVolumeComponentcomponent);					break;				case -1150856501:					var AbilityTagComponentresolver = MessagePackSerializer.Deserialize<AbilityTagComponentResolver>(dataContainerForResolving.Data);					var AbilityTagComponentcomponent = (AbilityTagComponent)entity.GetAbilityTagComponent();					AbilityTagComponentresolver.Out(ref AbilityTagComponentcomponent);					break;				case -1856633313:					var PassiveAbilityTagresolver = MessagePackSerializer.Deserialize<PassiveAbilityTagResolver>(dataContainerForResolving.Data);					var PassiveAbilityTagcomponent = (PassiveAbilityTag)entity.GetPassiveAbilityTag();					PassiveAbilityTagresolver.Out(ref PassiveAbilityTagcomponent);					break;				case -1965185654:					var ScenarioAnimationComponentresolver = MessagePackSerializer.Deserialize<ScenarioAnimationComponentResolver>(dataContainerForResolving.Data);					var ScenarioAnimationComponentcomponent = (ScenarioAnimationComponent)entity.GetScenarioAnimationComponent();					ScenarioAnimationComponentresolver.Out(ref ScenarioAnimationComponentcomponent);					break;				case 387690372:					var StateContextComponentresolver = MessagePackSerializer.Deserialize<StateContextComponentResolver>(dataContainerForResolving.Data);					var StateContextComponentcomponent = (StateContextComponent)entity.GetStateContextComponent();					StateContextComponentresolver.Out(ref StateContextComponentcomponent);					break;				case 760681168:					var StateDataComponentresolver = MessagePackSerializer.Deserialize<StateDataComponentResolver>(dataContainerForResolving.Data);					var StateDataComponentcomponent = (StateDataComponent)entity.GetStateDataComponent();					StateDataComponentresolver.Out(ref StateDataComponentcomponent);					break;				case 819793506:					var StateInfoComponentresolver = MessagePackSerializer.Deserialize<StateInfoComponentResolver>(dataContainerForResolving.Data);					var StateInfoComponentcomponent = (StateInfoComponent)entity.GetStateInfoComponent();					StateInfoComponentresolver.Out(ref StateInfoComponentcomponent);					break;				case 1046176786:					var AnimationCheckOutsHolderComponentresolver = MessagePackSerializer.Deserialize<AnimationCheckOutsHolderComponentResolver>(dataContainerForResolving.Data);					var AnimationCheckOutsHolderComponentcomponent = (AnimationCheckOutsHolderComponent)entity.GetAnimationCheckOutsHolderComponent();					AnimationCheckOutsHolderComponentresolver.Out(ref AnimationCheckOutsHolderComponentcomponent);					break;				case -2117687604:					var OverrideAnimatorComponentresolver = MessagePackSerializer.Deserialize<OverrideAnimatorComponentResolver>(dataContainerForResolving.Data);					var OverrideAnimatorComponentcomponent = (OverrideAnimatorComponent)entity.GetOverrideAnimatorComponent();					OverrideAnimatorComponentresolver.Out(ref OverrideAnimatorComponentcomponent);					break;				case 1782176358:					var SetupAfterViewTagComponentresolver = MessagePackSerializer.Deserialize<SetupAfterViewTagComponentResolver>(dataContainerForResolving.Data);					var SetupAfterViewTagComponentcomponent = (SetupAfterViewTagComponent)entity.GetSetupAfterViewTagComponent();					SetupAfterViewTagComponentresolver.Out(ref SetupAfterViewTagComponentcomponent);					break;				case -1191206187:					var AdditionalCanvasTagComponentresolver = MessagePackSerializer.Deserialize<AdditionalCanvasTagComponentResolver>(dataContainerForResolving.Data);					var AdditionalCanvasTagComponentcomponent = (AdditionalCanvasTagComponent)entity.GetAdditionalCanvasTagComponent();					AdditionalCanvasTagComponentresolver.Out(ref AdditionalCanvasTagComponentcomponent);					break;				case -1144719428:					var MainCanvasTagComponentresolver = MessagePackSerializer.Deserialize<MainCanvasTagComponentResolver>(dataContainerForResolving.Data);					var MainCanvasTagComponentcomponent = (MainCanvasTagComponent)entity.GetMainCanvasTagComponent();					MainCanvasTagComponentresolver.Out(ref MainCanvasTagComponentcomponent);					break;				case -2124047058:					var UITagComponentresolver = MessagePackSerializer.Deserialize<UITagComponentResolver>(dataContainerForResolving.Data);					var UITagComponentcomponent = (UITagComponent)entity.GetUITagComponent();					UITagComponentresolver.Out(ref UITagComponentcomponent);					break;			}		}	}}